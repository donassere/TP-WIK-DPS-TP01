# apiVersion: v1
# kind: Pod
# metadata:
#   name: podtest
# spec:
#   containers:
#   - name: podtest
#     image: registry.k8s.io/echoserver:1.4

#     ports:
#     - containerPort: 8080

---

# apiVersion: apps/v1
# kind: ReplicaSet
# metadata:
#   name: podtest
#   labels:
#     app: podt
#     toto: tata
# spec:
#   # modify replicas according to your case
#   replicas: 3
#   selector:
#     matchLabels:
#       toto: tata
#   template:
#     metadata:
#       labels:
#         toto: tata
#     spec:
#       containers:
#       - name: podtest
#         image: registry.k8s.io/echoserver:1.4
#         ports:
#         - containerPort: 8080


---

apiVersion: v1
kind: Service
metadata:
  name: podtest-service
spec:
  selector:
    toto: tata
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 8080


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: podtest
  labels:
    app: podtest
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate: 
      maxUnavailable: 50% 
  selector:
    matchLabels:
      toto: tata
  template:
    metadata:
      labels:
        toto: tata
    spec:
      containers:
      - name: podtest
        image: registry.k8s.io/echoserver:1.4
        ports:
        - containerPort: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: podtest
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: production.google.fr
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: podtest-service
            port:
              number: 3000